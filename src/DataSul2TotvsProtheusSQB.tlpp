#include "totvs.ch"
#include "shell.ch"

#include "dbstruct.ch"

#include "jsonhash.ch"
#include "jsonarray.ch"

#include "execin.th"
EXECIN CLASS SQBImport

static function SQBImportData(oMsNewProcess as object,lEnd as logical) as logical

    local aAddIndex as array

    local cAlias:="SQB" as character
    local cIndexKey as character
    local cTableImport:="SQB" as character

    local lSQBImport as logical

    local oTFIni:=cacheData():Get("datasul2totvsprotheus","readIniFile") as object
    local oTLogReport:=tLogReport():New() as object

    cIndexKey:=allTrim(oTFIni:GetPropertyValue(cAlias,"IndexKey","QB_FILIAL+QB_DEPTO+QB_CC"))
    aAddIndex:=strToKArr2(allTrim(oTFIni:GetPropertyValue(cAlias,"AddIndex","QB_FILIAL,QB_DEPTO,QB_CC")),",")

    lSQBImport:=datasul2totvs.Protheus():ImportData(@oMsNewProcess,@lEnd,@oTLogReport,@cAlias,@cIndexKey,@cTableImport,@aAddIndex)

    if (lSQBImport)
        ApMsgInfo(cAlias+" Table Import Completed","Info")
    else
        ApMsgInfo("Problems were encountered while processing the "+cTableImport+" table","Info")
    endif

    oTLogReport:PrintDialog("Log de Ocorrencias na Importacao: ["+cAlias+"]"+Upper(FWSX2Util():GetX2Name(cAlias,.F.)))
    oTLogReport:Clean()
    oTLogReport:=FreeObj(oTLogReport)

    FWFreeArray(@aAddIndex)

    DelClassIntF()

return(lSQBImport)

static function SQBGetValue(xGet as variant,xDefault as variant) as variant
return(cacheData():Get("datasul2totvsprotheus",xGet,xDefault))

static function SQBSetValue(xVar as variant,xValue as variant) as variant
return(cacheData():Set("datasul2totvsprotheus",xVar,xValue))
