#include "totvs.ch"

#include "tlpp-core.th"

namespace dna.tech.DataSul2Protheus

using namespace dna.tech
using namespace dna.tech.DataSul2Protheus

#include "execin.th"
EXECIN CLASS SRVImport

static function SRVGetValue(xGet as variant,xDefault as variant) as variant
return(cacheData():Get("datasul2totvsprotheus",xGet,xDefault))

static function SRVSetValue(xVar as variant,xValue as variant) as variant
return(cacheData():Set("datasul2totvsprotheus",xVar,xValue))

static function SRVImportData(oMsNewProcess as object,lEnd as logical,lPercentage as logical) as logical

    local aAddIndex as array

    local cAlias:="SRV" as character
    local cIndexKey as character
    local cTableImport:="SRV" as character

    local cAliasTMP:=getNextAlias() as character

    local lSRVImport as logical

    local oTFIni:=cacheData():Get("datasul2totvsprotheus","readIniFile") as object
    local oTLogReport:=tLogReport():New() as object

    begin sequence

        beginSQL alias cAliasTMP
            %noParser%
            SELECT DISTINCT 1 RVCODFOL
              FROM %table:SRV% SRV
             WHERE SRV.%NotDel%
               AND SRV.RV_CODFOL<>''
        endSQL

        lSRVImport:=((cAliasTMP)->RVCODFOL!=1)

        (cAliasTMP)->(dbCloseArea())

        if (!lSRVImport)
            ApMsgInfo("Problems were encountered while processing the "+cTableImport+" table. Already Exists RV_CODFOL","Info")
            break
        endif

        cIndexKey:=allTrim(oTFIni:GetPropertyValue(cTableImport,"IndexKey","RV_FILIAL+RV_COD"))
        aAddIndex:=cTools():StrTokArray(allTrim(oTFIni:GetPropertyValue(cTableImport,"AddIndex","RV_FILIAL,RV_COD")),",")

        lSRVImport:=dna.tech.DataSul2Protheus.datasul2totvs():Execute("dna.tech.DataSul2Protheus.ImportData",@oMsNewProcess,@lEnd,lPercentage,@oTLogReport,@cAlias,@cIndexKey,@cTableImport,@aAddIndex)

        if (lSRVImport)
            ApMsgInfo(cAlias+" Table Import Completed","Info")
        else
            ApMsgInfo("Problems were encountered while processing the "+cTableImport+" table","Info")
        endif

    end sequence

    oTLogReport:PrintDialog("Log de Ocorrencias na Importacao: ["+cAlias+"]"+Upper(FWSX2Util():GetX2Name(cAlias,.F.)))
    MsAguarde({||oTLogReport:FreeObj()},"Releasing temporary files and workspace memory...","Wait...")
    FreeObj(@oTLogReport)

    FWFreeArray(@aAddIndex)

    DelClassIntF()

return(lSRVImport)
