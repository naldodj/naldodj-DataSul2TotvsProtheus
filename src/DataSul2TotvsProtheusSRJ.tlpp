#include "totvs.ch"

#include "tlpp-core.th"

namespace dna.tech.DataSul2Protheus

using namespace dna.tech
using namespace dna.tech.DataSul2Protheus

#include "execin.th"
EXECIN CLASS SRJImport

static function SRJGetValue(xGet as variant,xDefault as variant) as variant
return(cacheData():Get("datasul2totvsprotheus",xGet,xDefault))

static function SRJSetValue(xVar as variant,xValue as variant) as variant
return(cacheData():Set("datasul2totvsprotheus",xVar,xValue))

static function SRJImportData(oMsNewProcess as object,lEnd as logical,lPercentage as logical) as logical

    local aAddIndex as array

    local cAlias:="SRJ" as character
    local cIndexKey as character
    local cTableImport:="SRJ" as character

    local lSRJImport as logical

    local oTFIni:=cacheData():Get("datasul2totvsprotheus","readIniFile") as object
    local oTLogReport:=tLogReport():New() as object

    cIndexKey:=allTrim(oTFIni:GetPropertyValue(cTableImport,"IndexKey","RJ_FILIAL+RJ_FUNCAO"))
    aAddIndex:=cTools():StrTokArray(allTrim(oTFIni:GetPropertyValue(cTableImport,"AddIndex","RJ_FILIAL,RJ_FUNCAO")),",")

    lSRJImport:=dna.tech.DataSul2Protheus.datasul2totvs():Execute("dna.tech.DataSul2Protheus.ImportData",@oMsNewProcess,@lEnd,lPercentage,@oTLogReport,@cAlias,@cIndexKey,@cTableImport,@aAddIndex)

    if ((lSRJImport).and.(!lEnd))
        oMsNewProcess:SetRegua1(0)
        oMsNewProcess:IncRegua1("Wait!")
        oMsNewProcess:SetRegua2(0)
        oMsNewProcess:IncRegua2("...")
        cTableImport:="SQ3"
        oTFIni:SetPropertyValue(cTableImport,"TCSQLUpdateTable","0")
        cIndexKey:=allTrim(oTFIni:GetPropertyValue(cTableImport,"IndexKey","Q3_FILIAL+Q3_CARGO+Q3_CC"))
        FWFreeArray(@aAddIndex)
        aAddIndex:=cTools():StrTokArray(allTrim(oTFIni:GetPropertyValue(cTableImport,"AddIndex","Q3_FILIAL,Q3_CARGO,Q3_CC")),",")
        lSRJImport:=dna.tech.DataSul2Protheus.datasul2totvs():Execute("dna.tech.DataSul2Protheus.ImportData",@oMsNewProcess,@lEnd,lPercentage,@oTLogReport,@cTableImport,@cIndexKey,@cTableImport,@aAddIndex)
        if (lSRJImport)
            ApMsgInfo(cAlias+"/"+cTableImport+" Table Import Completed","Info")
        else
            ApMsgInfo("Problems were encountered while processing the "+cTableImport+" table","Info")
        endif
    endif

    oTLogReport:PrintDialog("Log de Ocorrencias na Importacao: ["+cAlias+"]"+Upper(FWSX2Util():GetX2Name(cAlias,.F.)))
    MsAguarde({||oTLogReport:FreeObj()},"Releasing temporary files and workspace memory...","Wait...")
    FreeObj(@oTLogReport)

    FWFreeArray(@aAddIndex)

    DelClassIntF()

return(lSRJImport)
